CALL reverseDecimals
CALL converttohex
MOV AX, [converttohexcumlativesum]
HALT


// Dynamically stores any size decimal into memory
// Each digit has its own address
reverseDecimals:

// Initialise pointer direction flag
MOV BX, 0x0
MOV [GlobalPointerDirection], BX


reverseDecimalsloop:

// Termination condition must be at start
// Terminate when GlobalPointerDirection == 1 and GlobalPointerStart == GlobalPointer

// Put decimal or end of decimal flag into AX here






CALL globalPointerUpdate

JMP reverseDecimalsloop
// END OF reverseDecimals

DistributeDecimalAcrossGlobalArray:



// Taken from console test
readnext:
readnextloop:
MOV AX, [0x00F5]
CMP AX, 0x0
JEQ readnextloop
MOV AX, [0x00F3]
MOV BX, 0x00F5
MOV [BX], 0x0
RET



printchar:
MOV [0x00F0], AX
MOV BX, 0x0001
MOV [0xF2], BX
printcharloop:
MOV BX, [0x00F2]
CMP BX, 0x1
JEQ printcharloop
RET
// Prints char in AX



// Do not use this inside a function already using this at some preceeding function call
// Global pointer functions


globalPointerInitialise:

MOV AX, GlobalPointerStart
MOV AX, [AX]
MOV [GlobalPointer], AX


globalPointerUpdate:

MOV AX, GlobalPointerStart
MOV AX, [AX]
MOV [GlobalPointer], AX

// Check flag decrementing
MOV BX, [GlobalPointerDirection]
COMP BX, 0x1
JEQ GlobalPointerIncrement

MOV AX, [GlobalPointer]
DEC AX
MOV [GlobalPointer], AX

RET

GlobalPointerIncrement:

MOV AX, [GlobalPointer]
INC AX
MOV [GlobalPointer], AX

RET


HALT

GlobalPointerStart: DC.W 0x1000
GlobalPointer: DC.W 0x1FFC
GlobalPointerDirection: DC.W 0xFFB
// 0 == increment, 1 == decrement